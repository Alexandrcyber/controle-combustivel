#!/usr/bin/env node

/**
 * CLI para gerenciamento de migra√ß√µes do banco de dados
 * 
 * Uso:
 *   node cli-migrate.js migrate        # Executa todas as migra√ß√µes pendentes
 *   node cli-migrate.js status         # Mostra o status das migra√ß√µes
 *   node cli-migrate.js rollback <version> # Reverte uma migra√ß√£o espec√≠fica
 *   node cli-migrate.js test           # Testa a conex√£o com o banco
 */

const { testConnection, initDatabase } = require('./database');
const { runMigrations, migrationStatus, rollbackMigration } = require('./migrations');

// Fun√ß√£o principal
async function main() {
    const command = process.argv[2];
    const version = process.argv[3];

    console.log('üóÉÔ∏è  CLI de Migra√ß√µes - Controle de Combust√≠vel');
    console.log('==============================================\n');

    try {
        // Testar conex√£o primeiro
        const connected = await testConnection();
        if (!connected) {
            console.error('‚ùå N√£o foi poss√≠vel conectar ao banco de dados.');
            console.error('Verifique as configura√ß√µes no arquivo .env');
            process.exit(1);
        }

        switch (command) {
            case 'migrate':
                console.log('üöÄ Executando migra√ß√µes...\n');
                await initDatabase(); // Garante que as tabelas base existam
                await runMigrations();
                break;

            case 'status':
                await migrationStatus();
                break;

            case 'rollback':
                if (!version) {
                    console.error('‚ùå √â necess√°rio especificar a vers√£o para rollback');
                    console.error('Exemplo: node cli-migrate.js rollback 1.2.0');
                    process.exit(1);
                }
                await rollbackMigration(version);
                break;

            case 'test':
                console.log('‚úÖ Conex√£o com o banco de dados testada com sucesso!');
                break;

            case 'help':
            case '--help':
            case '-h':
                showHelp();
                break;

            default:
                console.error('‚ùå Comando n√£o reconhecido');
                showHelp();
                process.exit(1);
        }

        console.log('\nüéâ Opera√ß√£o conclu√≠da com sucesso!');
        process.exit(0);

    } catch (error) {
        console.error('\n‚ùå Erro durante a execu√ß√£o:', error.message);
        process.exit(1);
    }
}

function showHelp() {
    console.log(`
Comandos dispon√≠veis:

  migrate              Executa todas as migra√ß√µes pendentes
  status               Mostra o status de todas as migra√ß√µes
  rollback <version>   Reverte uma migra√ß√£o espec√≠fica (apenas remove o registro)
  test                 Testa a conex√£o com o banco de dados
  help                 Mostra esta ajuda

Exemplos:
  node cli-migrate.js migrate
  node cli-migrate.js status
  node cli-migrate.js rollback 1.2.0
  node cli-migrate.js test

Configura√ß√£o:
  Certifique-se de que o arquivo .env est√° configurado corretamente com:
  - DB_HOST
  - DB_PORT
  - DB_NAME
  - DB_USER
  - DB_PASSWORD
  - DB_SSL
`);
}

// Executar se chamado diretamente
if (require.main === module) {
    main();
}

module.exports = { main };
